using Application.Exceptions;
using Concordium.Sdk.Interop;

namespace Concordium.Sdk.Types;

/// <summary>
/// An event generated by a smart contract.
/// </summary>
public sealed record ContractEvent(byte[] Bytes)
{
    /// <summary>
    /// Return hex representation.
    /// </summary>
    public string ToHexString() => Convert.ToHexString(this.Bytes).ToLowerInvariant();

    /// <summary>
    /// Deserialize event from <see cref="schema"/>.
    /// </summary>
    /// <param name="schema">Module schema in hexadecimal.</param>
    /// <param name="contractName">Contract name.</param>
    /// <returns><see cref="Bytes"/> deserialized.</returns>
    /// <exception cref="InteropBindingException">Thrown when event wasn't able to be deserialized from schema.</exception>
    public string? GetDeserializeEvent(
        VersionedModuleSchema schema,
        ContractIdentifier contractName
    ) => InteropBinding.GetEventContract(schema, contractName, this);
}
